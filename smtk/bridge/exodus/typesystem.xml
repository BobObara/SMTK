<?xml version="1.0"?>
<typesystem package="@TYPESYSTEM_NAME@">

  @EXTRA_TYPESYSTEMS@

  <!-- Ignore Shiboken notice that Exodus lives inside SMTK namespace -->
  <suppress-warning text="Duplicate type entry: 'smtk'"/>

  <!-- Ignore methods that refer directly to Exodus pointers -->

  <!-- Ignore Exodus-specific enums -->

  <!-- Additional objects to be wrapped when building with Exodus -->
  <namespace-type name="smtk" generate = "no">
    <namespace-type name="bridge" generate = "no">
      <namespace-type name="exodus" generate = "yes">
        <enum-type name="EntityType">
          <include file-name="smtk/bridge/exodus/Bridge.h" location="local"/>
        </enum-type>

        <object-type name="Bridge">
          <include file-name="smtk/bridge/exodus/Bridge.h" location="local"/>
        </object-type>

        <value-type name="EntityHandle">
          <include file-name="smtk/bridge/exodus/Bridge.h" location="local"/>
        </value-type>

      </namespace-type>
    </namespace-type>
  </namespace-type>

  <value-type template="smtk::shared_ptr" args="smtk::bridge::exodus::Bridge">
  </value-type>

  <!-- Don't wrap methods that take pointers to Exodus classes.
       Shiboken improperly scopes classnames in argument
       lists (e.g., it assumes smtk::model::Shell when ::Shell is
       specified), making it not only undesirable but impossible
       to wrap Exodus pointers.
  <rejection class="smtk::bridge::exodus::Bridge" function-name="addBodyToManager"/>
    -->

  @EXTRA_OBJECTS@

</typesystem>

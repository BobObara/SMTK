//=========================================================================
//  Copyright (c) Kitware, Inc.
//  All rights reserved.
//  See LICENSE.txt for details.
//
//  This software is distributed WITHOUT ANY WARRANTY; without even
//  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
//  PURPOSE.  See the above copyright notice for more information.
//=========================================================================
#ifndef __smtk_Options_h
#define __smtk_Options_h

// Compile-time options chosen for this build of SMTK.

// Was SMTK built with Qt? If true, QtSMTK library will exist.
#cmakedefine SMTK_BUILD_QT

// Was SMTK built with VTK? If true, the vtkSMTK library will exist.
#cmakedefine SMTK_BUILD_VTK

// Was SMTK built with discrete model? If true, the smtkDiscreteBridge library
// and vtkSMTKDiscreteModel library will exist.
#cmakedefine SMTK_BUILD_DISCRETE_BRIDGE

// Was SMTK built with moab reader? If true, the vtkDiscreteMoabReader
// library will exist and smtkDiscreteBridge library will link against it.
#cmakedefine SMTK_BUILD_MOAB_READER

// Was SMTK built with CGM? If true, cgm-convert will exist.
#cmakedefine SMTK_BUILD_CGM
// Does CGM provide cgm_version.h (true for v14+, false otherwise).
#cmakedefine CGM_HAVE_VERSION_H

// Was SMTK built with Remus? If true, SMTKRemote library will exist.
#cmakedefine SMTK_ENABLE_REMUS

// Should sparse_hash_map be used (instead of std::map) for primary storage?
#cmakedefine SMTK_HASH_STORAGE

#define SMTK_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@"

#endif // __smtk_Options_h
